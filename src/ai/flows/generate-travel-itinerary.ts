// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Generates a personalized travel itinerary based on destination, budget, and trip duration.
 *
 * - generateTravelItinerary - A function that generates a travel itinerary.
 * - TravelItineraryInput - The input type for the generateTravelItinerary function.
 * - TravelItineraryOutput - The return type for the generateTravelItinerary function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const TravelItineraryInputSchema = z.object({
  destinations: z
    .array(
      z.object({
        name: z.string().describe('The name of the travel destination.'),
        durationDays: z.number().describe('The number of days to spend at this destination.'),
      })
    )
    .min(1)
    .describe('A list of destinations for the trip.'),
  budget: z.string().describe("The budget for the entire trip (e.g., '$5000', 'luxury')."),
  interests: z.string().optional().describe('Interests (e.g., history, food, art).'),
});
export type TravelItineraryInput = z.infer<typeof TravelItineraryInputSchema>;

const TravelItineraryOutputSchema = z.object({
  hotelSuggestions: z
    .array(
      z.object({
        name: z.string().describe('Name of the hotel.'),
        destination: z.string().describe('The destination city this hotel is in.'),
        cost: z.string().describe('Cost indicator (e.g., $, $$, $$$).'),
        bookingLink: z.string().describe('Link to book the hotel.'),
      })
    )
    .describe('List of suggested hotels, grouped by destination.'),
  dailyItineraries: z
    .array(
      z.object({
        day: z.number().describe('Day number in the itinerary.'),
        destination: z.string().describe('The destination city for this day of the itinerary.'),
        activities: z
          .array(
            z.object({
              description: z.string().describe('Description of the activity.'),
              metroStations: z.string().optional().describe('Nearest metro stations.'),
              cost: z.string().describe('Cost indicator (e.g., $, $$, $$$).'),
              link: z.string().optional().describe('Link for more information or booking.'),
              transportToNextActivity: z.object({
                  description: z.string().describe('Description of the transport to the next activity.'),
                  googleMapsLink: z.string().describe('Google Maps link for the route.'),
                }).optional().describe('Transportation to the next activity. Omit for the last activity of the day.'),
            })
          )
          .describe('List of activities for the day.'),
      })
    )
    .describe('Detailed daily itineraries.'),
  transportSuggestions: z
    .array(
      z.object({
        type: z.string().describe('Type of transport (e.g., Flight, Train, Bus).'),
        description: z.string().describe('Description of the transport option.'),
        bookingLink: z.string().describe('Link to book the transport.'),
      })
    )
    .describe('List of overall transportation suggestions between destinations.'),
});
export type TravelItineraryOutput = z.infer<typeof TravelItineraryOutputSchema>;

export async function generateTravelItinerary(input: TravelItineraryInput): Promise<TravelItineraryOutput> {
  return generateTravelItineraryFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateTravelItineraryPrompt',
  input: {schema: TravelItineraryInputSchema},
  output: {schema: TravelItineraryOutputSchema},
  prompt: `You are an expert travel planner. Generate a detailed travel itinerary for a multi-destination trip based on the user's preferences.

The user will be visiting the following destinations:
{{#each destinations}}
- {{name}} for {{durationDays}} days
{{/each}}

Total trip duration is the sum of all days. Please number the days in the daily itinerary sequentially across the entire trip.
For each day in the itinerary, you must specify the destination city.

Budget: {{{budget}}}
Interests: {{{interests}}}

Provide 3 hotel suggestions for each destination with cost, booking links, and the destination city.
Create a daily itinerary with activity suggestions, metro routes, cost estimates, and external links for each day of the entire trip.
For each day, provide transportation suggestions between activities, including a description and a Google Maps link. Do not add transportation for the last activity of a day.
Provide a list of overall transportation suggestions for travel between the main destinations (e.g., flights from Paris to Rome).
Organize the itinerary in a card format for each day.
Include cost indicators ($, $$, $$$) for activities and hotels.
`,
});

const generateTravelItineraryFlow = ai.defineFlow(
  {
    name: 'generateTravelItineraryFlow',
    inputSchema: TravelItineraryInputSchema,
    outputSchema: TravelItineraryOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
