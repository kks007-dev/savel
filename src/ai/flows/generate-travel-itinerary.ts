// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Generates a personalized travel itinerary based on destination, budget, and trip duration.
 *
 * - generateTravelItinerary - A function that generates a travel itinerary.
 * - TravelItineraryInput - The input type for the generateTravelItinerary function.
 * - TravelItineraryOutput - The return type for the generateTravelItinerary function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const TravelItineraryInputSchema = z.object({
  destination: z.string().describe('The desired travel destination.'),
  budget: z.string().describe('The budget for the entire trip (e.g., \'\$5000\', \'luxury\').'),
  durationDays: z.number().describe('The number of days for the trip.'),
  interests: z.string().optional().describe('Interests (e.g., history, food, art).'),
});
export type TravelItineraryInput = z.infer<typeof TravelItineraryInputSchema>;

const TravelItineraryOutputSchema = z.object({
  hotelSuggestions: z.array(
    z.object({
      name: z.string().describe('Name of the hotel.'),
      cost: z.string().describe('Cost indicator (e.g., $, $$, $$$).'),
      bookingLink: z.string().url().describe('Link to book the hotel.'),
    })
  ).describe('List of suggested hotels.'),
  dailyItineraries: z.array(
    z.object({
      day: z.number().describe('Day number in the itinerary.'),
      activities: z.array(
        z.object({
          description: z.string().describe('Description of the activity.'),
          metroStations: z.string().optional().describe('Nearest metro stations.'),
          cost: z.string().describe('Cost indicator (e.g., $, $$, $$$).'),
          link: z.string().url().optional().describe('Link for more information or booking.'),
        })
      ).describe('List of activities for the day.'),
    })
  ).describe('Detailed daily itineraries.'),
});
export type TravelItineraryOutput = z.infer<typeof TravelItineraryOutputSchema>;

export async function generateTravelItinerary(input: TravelItineraryInput): Promise<TravelItineraryOutput> {
  return generateTravelItineraryFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateTravelItineraryPrompt',
  input: {schema: TravelItineraryInputSchema},
  output: {schema: TravelItineraryOutputSchema},
  prompt: `You are an expert travel planner. Generate a detailed travel itinerary based on the user's preferences.

Destination: {{{destination}}}
Budget: {{{budget}}}
Duration: {{{durationDays}}} days
Interests: {{{interests}}}

Provide 3 hotel suggestions with cost and booking links.
Create a daily itinerary with activity suggestions, metro routes, cost estimates, and external links.
Organize the itinerary in a card format for each day.
Include cost indicators ($, $$, $$$) for activities and hotels.
`, 
});

const generateTravelItineraryFlow = ai.defineFlow(
  {
    name: 'generateTravelItineraryFlow',
    inputSchema: TravelItineraryInputSchema,
    outputSchema: TravelItineraryOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
